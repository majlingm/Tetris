
function Pieces() {

    rotation = 0;
    activePieces = [];
    pieces = [];

    function getNewPiece() {
        rotation = 0;
        activePieces.push(Math.floor(Math.random() * pieces.length));
        
        return pieces[activePieces[activePieces.length - 1]][0];
    }

    function getNextRotation() {
        if (rotation < (pieces[activePieces[activePieces.length - 2]].length - 1))
            rotation++;
        else
            rotation = 0;

        return pieces[activePieces[activePieces.length - 2]][rotation];

    }

    //Return the piece to be expected next time you call getNextRotation
    function seeNextInRotation() {

        var r;

        if (rotation < (pieces[activePieces[activePieces.length - 2]].length - 1)){
            r = rotation + 1;
        } else {
            r = 0;
        }

        return pieces[activePieces[activePieces.length - 2]][r];

    }

    //Defining all the pieces
   var pieces = [
        // Square  
        [
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 6, 6, 0],
                [0, 0, 6, 6, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 6, 6, 0],
                [0, 0, 6, 6, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 6, 6, 0],
                [0, 0, 6, 6, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 6, 6, 0],
                [0, 0, 6, 6, 0],
                [0, 0, 0, 0, 0]
            ]
        ],

        // I  
        [
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 2, 2, 2, 2],
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 2, 0, 0],
                [0, 0, 2, 0, 0],
                [0, 0, 2, 0, 0],
                [0, 0, 2, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [2, 2, 2, 2, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 2, 0, 0],
                [0, 0, 2, 0, 0],
                [0, 0, 2, 0, 0],
                [0, 0, 2, 0, 0],
                [0, 0, 0, 0, 0]
            ]
        ],
        // L  
        [
            [
                [0, 0, 0, 0, 0],
                [0, 0, 3, 0, 0],
                [0, 0, 3, 0, 0],
                [0, 0, 3, 3, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 3, 3, 3, 0],
                [0, 3, 0, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 3, 3, 0, 0],
                [0, 0, 3, 0, 0],
                [0, 0, 3, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 3, 0],
                [0, 3, 3, 3, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0]
            ]
        ],
        // L mirrored  
        [
            [
                [0, 0, 0, 0, 0],
                [0, 0, 4, 0, 0],
                [0, 0, 4, 0, 0],
                [0, 4, 4, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 4, 0, 0, 0],
                [0, 4, 4, 4, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 4, 4, 0],
                [0, 0, 4, 0, 0],
                [0, 0, 4, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 4, 4, 4, 0],
                [0, 0, 0, 4, 0],
                [0, 0, 0, 0, 0]
            ]
        ],
        // N  
        [
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 5, 0],
                [0, 0, 5, 5, 0],
                [0, 0, 5, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 5, 5, 0, 0],
                [0, 0, 5, 5, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 5, 0, 0],
                [0, 5, 5, 0, 0],
                [0, 5, 0, 0, 0],
                [0, 0, 0, 0, 0]
            ],

            [
                [0, 0, 0, 0, 0],
                [0, 5, 5, 0, 0],
                [0, 0, 5, 5, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0]
            ]
        ],
        // N mirrored  
        [
            [
                [0, 0, 0, 0, 0],
                [0, 0, 3, 0, 0],
                [0, 0, 3, 3, 0],
                [0, 0, 0, 3, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 3, 3, 0],
                [0, 3, 3, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 3, 0, 0, 0],
                [0, 3, 3, 0, 0],
                [0, 0, 3, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 3, 3, 0],
                [0, 3, 3, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0]
            ]
        ],
        // T  
        [
            [
                [0, 0, 0, 0, 0],
                [0, 0, 4, 0, 0],
                [0, 0, 4, 4, 0],
                [0, 0, 4, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0],
                [0, 4, 4, 4, 0],
                [0, 0, 4, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 4, 0, 0],
                [0, 4, 4, 0, 0],
                [0, 0, 4, 0, 0],
                [0, 0, 0, 0, 0]
            ],
            [
                [0, 0, 0, 0, 0],
                [0, 0, 4, 0, 0],
                [0, 4, 4, 4, 0],
                [0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0]
            ]
        ]
    ];


    return {

        "getNewPiece": getNewPiece,
        "getNextRotation": getNextRotation,
        "seeNextInRotation": seeNextInRotation

    };

}